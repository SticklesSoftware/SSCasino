@{
    //========================================================================================================================
    // WEBSITE: Poker Playground - Experimental virtual poker
    //
    // _Shuffler_ControlPanel.cshtml
    //      Renders the shuffler control panel
    //========================================================================================================================
}

@using SSCasino;
@using SSCasino.Models;
@model ShufflerControlPanel

<!-- Card selection area-->
<div class="ssc_ShufflerCP_PanelSection">
    <!-- Card selection combobox -->
    <div class="ssc_ShufflerCP_PanelLabel">Select a card pack:</div>
    @Html.DevExpress().ComboBox(settings =>
    {
        settings.Name = "cbo_ShufflerCardPacks";
        settings.ControlStyle.CssClass = "ssc_ShufflerCP_CardCombo";
        settings.Properties.DropDownStyle = DropDownStyle.DropDownList;
        settings.Properties.TextField = "CardPackName";
        settings.Properties.ValueField = "CardPackId";
        settings.Properties.ValueType = typeof(int);
        settings.SelectedIndex = (Model.SelectedCardPack.CardPackId - 1);
        settings.Properties.ClientSideEvents.SelectedIndexChanged = "cbo_ShufflerCardPacks_SelectedIndexChanged";
    }).BindList(Model.CardPacks).GetHtml()

    <!-- Card selection sample cards -->
    <div class="ssc_ShufflerCP_SampleCardArea">@Html.Partial("_Shuffler_CardExamplesCBP", Model.SelectedCardPack)</div>
</div>

<!-- Shuffle options area -->
<div class="ssc_ShufflerCP_PanelSection">
    <div class="ssc_ShufflerCP_PanelLabel ssc_TextUnderline">Shuffling algorithm:</div>
    @if (Model.ShuffleMode == SiteHelpers.ShuffleMode.Standard)
    {
        @Html.DevExpress().CheckBox(settings =>
        {
            settings.Name = "chk_FisherYates";
            settings.Text = "Fisher-Yates Shuffle";
            settings.ControlStyle.CssClass = "ssc_ShufflerCP_ShuffleOption";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.ValueUnchecked = 0;
            settings.Properties.ValueChecked = 1;
            settings.Checked = (Model.ShuffleType == SiteHelpers.ShuffleTypes.FisherYates);
            settings.Properties.ClientSideEvents.ValueChanged = "chk_FisherYates_ValueChanged";
        }).GetHtml()

        @Html.DevExpress().CheckBox(settings =>
        {
            settings.Name = "chk_Naive";
            settings.Text = "Naive Shuffle";
            settings.ControlStyle.CssClass = "ssc_ShufflerCP_ShuffleOption";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.ValueUnchecked = 0;
            settings.Properties.ValueChecked = 2;
            settings.Checked = (Model.ShuffleType == SiteHelpers.ShuffleTypes.Naive);
            settings.Properties.ClientSideEvents.ValueChanged = "chk_Naive_ValueChanged";
        }).GetHtml()
    }
    else
    {
        @Html.DevExpress().CheckBox(settings =>
        {
            settings.Name = "chk_FourCardSample";
            settings.Text = "Four Card Sample";
            settings.ControlStyle.CssClass = "ssc_ShufflerCP_ShuffleOption";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.ValueUnchecked = 0;
            settings.Properties.ValueChecked = 1;
            settings.Checked = (Model.SampleSize == SiteHelpers.SampleSizes.FourCardSample);
            settings.Properties.ClientSideEvents.ValueChanged = "chk_FourCardSample_ValueChanged";
        }).GetHtml()

        @Html.DevExpress().CheckBox(settings =>
        {
            settings.Name = "chk_SixCardSample";
            settings.Text = "Six Card Sample";
            settings.ControlStyle.CssClass = "ssc_ShufflerCP_ShuffleOption";
            settings.Properties.ValueType = typeof(int);
            settings.Properties.ValueUnchecked = 0;
            settings.Properties.ValueChecked = 2;
            settings.Checked = (Model.SampleSize == SiteHelpers.SampleSizes.SixCardSample);
            settings.Properties.ClientSideEvents.ValueChanged = "chk_SixCardSample_ValueChanged";
        }).GetHtml()
    }
</div>

<!-- Number of shuffles area -->
<div class="ssc_ShufflerCP_PanelSection">
    <div class="ssc_ShufflerCP_PanelLabel">Number of shuffles:</div>
    @Html.DevExpress().TextBox(settings =>
    {
        settings.Name = "txt_ShuffleCount";
        settings.ControlStyle.HorizontalAlign = HorizontalAlign.Right;
        settings.ControlStyle.CssClass = "ssc_ShufflerCP_Textbox";
        settings.Properties.ClientSideEvents.Init = "txt_ShuffleCount_Init";
        settings.Properties.ClientSideEvents.GotFocus = "txt_ShuffleCount_GotFocus";
        settings.Properties.ClientSideEvents.LostFocus = "txt_ShuffleCount_LostFocus";
    }).GetHtml()
    <div id="div_ShuffleWarning" class="ssc_ShufflerCP_PanelWarning">@Model.ShufflerWarning</div>
</div>

<!-- Shuffle up! -->
<div class="ssc_ShufflerCP_PanelSection">
    <div id="cmd_ShuffleButton" class="ssc_ShufflerCP_Button" onclick="cmd_ShuffleButton_OnClick();">Shuffle</div>
    <div id="cmd_ResetButton" class="ssc_ShufflerCP_Button" onclick="cmd_ResetButton_OnClick();">Reset</div>
</div>

<!-- Hidden Fields -->
@Html.Hidden("hdnShufflerMode", (int)Model.ShuffleMode)
@Html.Hidden("hdnMinShuffles", Model.MinShuffles)
@Html.Hidden("hdnMaxShuffles", Model.MaxShuffles)
@Html.Hidden("hdnShuffleCount", Model.ShuffleCount)
